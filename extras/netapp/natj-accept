#! /bin/sh
#
# Script to read a list of NATJ submission summaries and send out 
# acceptance letters.
#
# Modification History
# ~~~~~~~~~~~~~~~~~~~~
# 02	May-2004, Greg Tarsa
#	Adapted for NATJ acceptance mailing
#
# 01	Jul-1999, Greg Tarsa
#	Wrote original code.
#

Usage='
    USAGE: natj-accept [-option] < input_file

    Generate e-mail messages requesting peer-input from the folks in
    the input_file.

    Default is to print the e-mail to stdout.

    Options include:
	-s[end]	  	actually send the e-mail messages.
	-d[ebug]	enable debug messages

    ----
    input file consists of data sets of a single line w/ fields
    delimited by tabs:

    <init>\t<final>\t<r-date>\t<doc#>\t<type>\t<url>\t<title>\t<tag>\t<author>\t<list>

       <init>	anything other than "accept" will cause record to be ignored
       <final>	(unused) final acceptance status
       <r-date>	(unused) date received
       <docno>	(unused) assigned NATJ doc number
       <type>	"P" = Paper; "A" = Abstract
       <url>	(unused) URL of the submission
       <title>	Title of the paper
       <tag>	docno & title combined
       <author>	(unused) List of author full names
       <list> authors e-mail, submitter first (used as name@netapp.com)
       
       The remainder of the line is ignored.

    e-mail will be sent to the first address in the <list>,
    postfixed by "@netapp.com"

    The format of the file lends itself to an excel spreadsheet
    written out as a tab-delimited file.
'
nl='
'

myemail="tarsa@netapp.com"
templatefile="$HOME/templates/natj-accept.txt"
send="no"
input_file=""
debug="no"

# process each command line word
while :
do
    # No more arguments?  All Done.
    case $# in
       0) break ;;
    esac

    # process the switches
    case $1 in
       # set the "really send" flag
       -send|-s*)
            send="yes"
	    ;;
	    
       # set the debug flag
       -debug|-d*)
            debug="yes"
	    ;;
	    
       -*) echo 1>&2 "?Invalid switch: $1"; errflg=yes ;;
        *) input_file="$1"
	   ;;
    esac
    shift
done

case $input_file in
    "") echo 1>&2 "?No input file specified"; errflg=yes ;;
esac

case $errflg in
   yes) echo 1>&2 "$Usage$nl"; exit 0 ;;
esac

if test ! -s $input_file
then
    echo 1>&2 "?data file is empty."
    errflg=yes
fi

case $errflg in
   yes) echo 1>&2 "$Usage$nl"; exit 0 ;;
esac

case $send in
    yes) echo "Mail will be sent when you hit Enter: "; read dummy ;;
esac

# remove quote marks from the file and pipe to the big filter
# remove null fields
sed '	s/"//g
	s/		/	<null>	/g
 	s/\.//g' $input_file |
while : 
do
     # read the data line, break it into arguments
     read data || break

     IFS="	"
     set $data

     init="$1"
     final="$2"		#unused
     rdate="$3"		#unused
     docno="$4"		#unused
     type="$5"
     url="$6"		#unused
     title="$7"
     tag="`echo $8 | sed 's/  */ /'g`"

     # author's name is 1st word in list that is usually nl delimited,
     # but sometimes comma delimited.
     author="`echo $9 | head -1 | sed 's/[, ].*//'`"

     # more fields than field #'s, so shift left
     # e-mail list is 1st name in list that is usually nl delimited,
     # but sometimes comma delimited.

     shift
     list="`echo $9 | head -1 | sed 's/,.*//'`"@netapp.com

     # sanity check the arguments
     case $init in
      accept|Accept)
	 case $type in "") echo 1>&2 "?type is null: '$*'"; errflg=1;; esac
	 case $title in "") echo 1>&2 "?title is null: '$*'"; errflg=1;; esac
	 case $tag in "") echo 1>&2 "?tag is null: '$*'"; errflg=1;; esac
	 case $list in "") echo 1>&2 "?list is null: '$*'"; errflg=1;; esac
	 ;;

     esac

     case $errflg in
         "") ;;
	 *) break ;;
     esac

     subject="NATJ: $tag has been accepted"

     case $debug in
        yes)
	    case $init in
	       accept|Accept) ;;
	       *) echo "init <> Accept; skipping" ; continue ;;
	    esac
	    echo "init= $init"
	    echo "type= $type"
	    echo "title= $title"
	    echo "tag= $tag"
	    echo "list= $list"
	    echo "cmd: Mail -b $myemail -s "'"$subject"'" $list"
	    ;;
     esac

     # skip over lines that do not start with "Accept"
     case $init in
        accept|Accept) echo "Sending to $author/$list";;
        *) continue
     esac

#echo wait
#read x < /dev/tty


     # convert type abbrev to full word, default is "draft"
     case $type in
        a|A) type="abstract" ;;
	p|P) type="paper" ;;
	*) type="draft" ;;
     esac


     sed "s=x-author-x=$author=
	  s=x-type-x=$type=
	  s=x-tag-x=$tag=" $templatefile |
	  fmt -w 63 |
	  case $send in
	      yes) Mail -b $myemail -s "$subject" $list ;;
	      *) case $debug in
		    yes) ;;
		    *) case $firsttime in
			  "") cat ;;
			  *) head -10 ;;
		       esac
		       ;;
		  esac
		  ;;
	  esac
	  firsttime="no" 

     case $debug in
        yes) echo "------" ;;
	*)   case $send in
	         yes) echo "--- Sent ---" ;;
		 no)  echo "--- Not Sent ---" ;;
	     esac
	     ;;
     esac
     echo
done












